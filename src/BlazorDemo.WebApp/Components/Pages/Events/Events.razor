@page "/events"

@inject IEventServices EventServices
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Events</PageTitle>

<h3>Events</h3>

<AuthorizeView>
    <div class="mt-2 mb-2">
        <a class="btn btn-primary" role="button" href="/new-event">New Event</a>
    </div>

    @if (_events == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table table-striped table-bordered table-hover table-responsive">
            <thead class="table-dark">
            <tr>
                <th class="text-center">Start Date</th>
                <th class="text-center">Title</th>
                <th class="text-center">Description</th>
                <th class="text-center">Created By</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var eventRow in _events)
            {
                <tr>
                    <td class="text-end">@eventRow.StartDate.ToString("dd-MM-yyyy")</td>
                    <td>@eventRow.Title</td>
                    <td>@eventRow.Description</td>
                    <td>@eventRow.CreatedBy</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@EventUrl(eventRow.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
</AuthorizeView>

@code {

    private List<EventRow>? _events = [];

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (!authState.User.Identity?.IsAuthenticated ?? false)
        {
            NavigationManager.NavigateTo("/sign-in");
        }

        _events = await EventServices.GetAllAsync();
    }

    private static string EventUrl(Guid id) => $"/edit-event/{id}";
}
